{"version":3,"sources":["components/GoodCard/GoodCard.jsx","components/GoodsList/GoodsList.jsx","App.jsx","index.jsx"],"names":["GoodCard","good","GoodList","goods","map","goodsFromServer","SORT_FIELD_ALPHABET","SORT_FIELD_LENGTH","App","useState","sortType","setSortType","isReverse","setIsReverse","visibleGoods","prepareGoods","sort","good1","good2","localeCompare","length","reverse","getPrepareGoods","className","type","onClick","cn","ReactDOM","render","document","getElementById"],"mappings":"mOAAaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,oBAAI,UAAQ,OAAZ,SAAoBA,KCCTC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,6BAEIA,EAAMC,KAAI,SAAAH,GAAI,OACZ,cAAC,EAAD,CACEA,KAAMA,GACDA,SCDFI,G,YAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAGIC,EAAsB,WACtBC,EAAoB,SA2BnB,IAAMC,EAAM,WACjB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEMC,EA7BR,SAAyBX,EAAOO,EAAUE,GACxC,IAAMG,EAAY,YAAOZ,GAqBzB,OAnBIO,GACFK,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQR,GACN,KAAKJ,EACH,OAAOW,EAAME,cAAcD,GAE7B,KAAKX,EACH,OAAOU,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXR,GACFG,EAAaM,UAGRN,EAQHO,CAAgBjB,EAAiBK,EAAUE,GAE/C,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAMd,EAAYL,IAC3BiB,UAAWG,IACT,iBAAkB,CAAE,WAAYhB,IAAaJ,IAJjD,iCAUA,wBACEkB,KAAK,SACLC,QAAS,kBAAMd,EAAYJ,IAC3BgB,UAAWG,IACT,oBAAqB,CAAE,WAAYhB,IAAaH,IAJpD,4BAUA,wBACEiB,KAAK,SACLC,QAAS,kBAAMZ,GAAcD,IAC7BW,UAAWG,IACT,oBAAqB,CAAE,YAA0B,IAAdd,IAJvC,sBAUEF,GAAYE,IACZ,wBACEY,KAAK,SACLC,QAAS,WACPd,EAAY,IACZE,GAAa,IAEfU,UAAU,4BANZ,sBAaJ,cAAC,EAAD,CAAUpB,MAAOW,QCnGvBa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1d43dd3e.chunk.js","sourcesContent":["export const GoodCard = ({ good }) => (\n  <li data-cy=\"Good\">{good}</li>\n);\n","import { GoodCard } from '../GoodCard/GoodCard';\n\nexport const GoodList = ({ goods }) => (\n  <ul>\n    {\n      goods.map(good => (\n        <GoodCard\n          good={good}\n          key={good}\n        />\n      ))\n    }\n  </ul>\n);\n","import React, { useState } from 'react';\nimport cn from 'classnames';\n\nimport { GoodList } from './components/GoodsList/GoodsList';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABET = 'alphabet';\nconst SORT_FIELD_LENGTH = 'length';\n\nfunction getPrepareGoods(goods, sortType, isReverse) {\n  const prepareGoods = [...goods];\n\n  if (sortType) {\n    prepareGoods.sort((good1, good2) => {\n      switch (sortType) {\n        case SORT_FIELD_ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReverse) {\n    prepareGoods.reverse();\n  }\n\n  return prepareGoods;\n}\n\nexport const App = () => {\n  const [sortType, setSortType] = useState('');\n  const [isReverse, setIsReverse] = useState(false);\n\n  const visibleGoods\n    = getPrepareGoods(goodsFromServer, sortType, isReverse);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => setSortType(SORT_FIELD_ALPHABET)}\n          className={cn(\n            'button is-info', { 'is-light': sortType !== SORT_FIELD_ALPHABET },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSortType(SORT_FIELD_LENGTH)}\n          className={cn(\n            'button is-success', { 'is-light': sortType !== SORT_FIELD_LENGTH },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setIsReverse(!isReverse)}\n          className={cn(\n            'button is-warning', { 'is-light': isReverse === false },\n          )}\n        >\n          Reverse\n        </button>\n\n        {(sortType || isReverse) && (\n          <button\n            type=\"button\"\n            onClick={() => {\n              setSortType('');\n              setIsReverse(false);\n            }}\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodList goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}